<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tj.urbanplanning.tree.Dao.MaintainRecordMapper">
  <resultMap id="BaseResultMap" type="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="last_date" jdbcType="TIMESTAMP" property="lastDate" />
    <result column="tree_num" jdbcType="INTEGER" property="treeNum" />
    <result column="recorder" jdbcType="VARCHAR" property="recorder" />
    <result column="climate" jdbcType="VARCHAR" property="climate" />
    <result column="project" jdbcType="INTEGER" property="project" />
    <result column="photo_before" jdbcType="VARCHAR" property="photoBefore" />
    <result column="photo_after" jdbcType="VARCHAR" property="photoAfter" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from maintain_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into maintain_record (`date`, last_date, tree_num, 
      recorder, climate, project, 
      photo_before, photo_after, note
      )
    values (#{date,jdbcType=TIMESTAMP}, #{lastDate,jdbcType=TIMESTAMP}, #{treeNum,jdbcType=INTEGER}, 
      #{recorder,jdbcType=VARCHAR}, #{climate,jdbcType=VARCHAR}, #{project,jdbcType=INTEGER}, 
      #{photoBefore,jdbcType=VARCHAR}, #{photoAfter,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    update maintain_record
    set `date` = #{date,jdbcType=TIMESTAMP},
      last_date = #{lastDate,jdbcType=TIMESTAMP},
      tree_num = #{treeNum,jdbcType=INTEGER},
      recorder = #{recorder,jdbcType=VARCHAR},
      climate = #{climate,jdbcType=VARCHAR},
      project = #{project,jdbcType=INTEGER},
      photo_before = #{photoBefore,jdbcType=VARCHAR},
      photo_after = #{photoAfter,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `date`, last_date, tree_num, recorder, climate, project, photo_before, 
    photo_after, note
    from maintain_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `date`, last_date, tree_num, recorder, climate, project, photo_before, 
    photo_after, note
    from maintain_record
  </select>
  <resultMap id="BaseResultMap" type="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="last_date" jdbcType="TIMESTAMP" property="lastDate" />
    <result column="tree_num" jdbcType="INTEGER" property="treeNum" />
    <result column="recorder" jdbcType="VARCHAR" property="recorder" />
    <result column="climate" jdbcType="VARCHAR" property="climate" />
    <result column="project" jdbcType="INTEGER" property="project" />
    <result column="photo_before" jdbcType="VARCHAR" property="photoBefore" />
    <result column="photo_after" jdbcType="VARCHAR" property="photoAfter" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from maintain_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into maintain_record (`date`, last_date, tree_num, 
      recorder, climate, project, 
      photo_before, photo_after, note
      )
    values (#{date,jdbcType=TIMESTAMP}, #{lastDate,jdbcType=TIMESTAMP}, #{treeNum,jdbcType=INTEGER}, 
      #{recorder,jdbcType=VARCHAR}, #{climate,jdbcType=VARCHAR}, #{project,jdbcType=INTEGER}, 
      #{photoBefore,jdbcType=VARCHAR}, #{photoAfter,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tj.urbanplanning.tree.Entity.MaintainRecord">
    update maintain_record
    set `date` = #{date,jdbcType=TIMESTAMP},
      last_date = #{lastDate,jdbcType=TIMESTAMP},
      tree_num = #{treeNum,jdbcType=INTEGER},
      recorder = #{recorder,jdbcType=VARCHAR},
      climate = #{climate,jdbcType=VARCHAR},
      project = #{project,jdbcType=INTEGER},
      photo_before = #{photoBefore,jdbcType=VARCHAR},
      photo_after = #{photoAfter,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `date`, last_date, tree_num, recorder, climate, project, photo_before, 
    photo_after, note
    from maintain_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `date`, last_date, tree_num, recorder, climate, project, photo_before, 
    photo_after, note
    from maintain_record
  </select>
</mapper>